n <- which(colnames(prism.clean) == Y.doscor.n[i])
if (is.na(n) | is.null(n)) {
next
}
add.Y <- data.frame(add.Y, as.double(prism.clean[, n]))
}
for (i in 1:ncol(add.Y)) {
add.Y[, i] <- sapply(add.Y[, i], function(x) {x/Y.doscor[i]}, i)
}
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(prism.clean)))
n <- NULL
for (i in 1:length(Y.doscor)) {
n <- which(colnames(prism.clean) == Y.doscor.n[i])
if (is.na(n) | is.null(n)) {
next
}
add.Y <- data.frame(add.Y, as.double(prism.clean[, n]))
}
for (i in 1:ncol(add.Y)) {
add.Y[, i] <- sapply(add.Y[, i], function(x) {x/Y.doscor[i]}, i)
}
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(prism.clean)))
for (i in 1:length(Y.doscor)) {
n <- which(colnames(prism.clean) == Y.doscor.n[i])
if (is.na(n) | is.null(n)) {
next
}
add.Y <- data.frame(add.Y, as.double(prism.clean[, n]))
}
for (i in 1:ncol(add.Y)) {
add.Y[, i] <- sapply(add.Y[, i], function(x) {x/Y.doscor[i]}, i)
}
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(prism.clean)))
for (i in 1:length(Y.doscor)) {
n <- which(colnames(prism.clean) == Y.doscor.n[i])
print(n)
if (is.na(n) | is.null(n)) {
next
}
add.Y <- data.frame(add.Y, as.double(prism.clean[, n]))
}
for (i in 1:ncol(add.Y)) {
add.Y[, i] <- sapply(add.Y[, i], function(x) {x/Y.doscor[i]}, i)
}
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(prism.clean)))
for (i in 1:length(Y.doscor)) {
n <- which(colnames(prism.clean) == Y.doscor.n[i])
print(n)
if (is.na(n) | is.null(n)) {
next
}
add.Y <- data.frame(add.Y, as.double(prism.clean[, n]))
}
for (i in 1:ncol(add.Y)) {
add.Y[, i] <- sapply(add.Y[, i], function(x) {x/Y.doscor[i]}, i)
}
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(prism.clean)))
dbg <- c()
for (i in 1:length(Y.doscor)) {
n <- which(colnames(prism.clean) == Y.doscor.n[i])
dbg <- append(dbg, n)
if (is.na(n) | is.null(n)) {
next
}
add.Y <- data.frame(add.Y, as.double(prism.clean[, n]))
}
for (i in 1:ncol(add.Y)) {
add.Y[, i] <- sapply(add.Y[, i], function(x) {x/Y.doscor[i]}, i)
}
View(dbg)
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(prism.clean)))
dbg <- c()
for (i in 1:length(Y.doscor)) {
n <- which(colnames(prism.clean) == Y.doscor.n[i])
dbg <- append(dbg, n)
if (is.na(n) | is.null(n)) {
next
}
add.Y <- data.frame(add.Y, as.double(prism.clean[, n]))
}
for (i in 1:ncol(add.Y)) {
add.Y[, i] <- sapply(add.Y[, i], function(x, i) {x/Y.doscor[i]}, i)
}
View(dbg)
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(prism.clean)))
dbg <- c()
for (i in 1:length(Y.doscor)) {
n <- which(colnames(prism.clean) == Y.doscor.n[i])
dbg <- append(dbg, n)
if (is.na(n)) {
next
}
add.Y <- data.frame(add.Y, as.double(prism.clean[, n]))
}
for (i in 1:ncol(add.Y)) {
add.Y[, i] <- sapply(add.Y[, i], function(x, i) {x/Y.doscor[i]}, i)
}
View(dbg)
which(sapply(dbg, function(x){length(x) == 0}))
which(sapply(dbg, function(x){length(x) == 0}) == T)
which(sapply(dbg, function(x){length(x) == 0}) == F
)
ncol(prism.clean)
length(Y.doscor.n)
length(integer(0))
length(1)
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(prism.clean)))
dbg <- c()
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(prism.clean) == Y.doscor.n[i])
dbg <- append(dbg, n)
if (length(n) == 0 | is.na(n) | is.null(n)) {
next
}
add.Y <- data.frame(add.Y, as.double(prism.clean[, n]))
}
for (i in 1:ncol(add.Y)) {
add.Y[, i] <- sapply(add.Y[, i], function(x, i) {x/Y.doscor[i]}, i)
}
View(dbg)
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(prism.clean)))
dbg <- c()
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(prism.clean) == Y.doscor.n[i])
dbg <- append(dbg, n)
if (length(n) == 0) {
next
}
add.Y <- data.frame(add.Y, as.double(prism.clean[, n]))
}
for (i in 1:ncol(add.Y)) {
add.Y[, i] <- sapply(add.Y[, i], function(x, i) {x/Y.doscor[i]}, i)
}
View(dbg)
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(pancan.clean)))
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(pancan.clean) == Y.doscor.n[i])
if (length(n) == 0) {next}
add.Y <- data.frame(add.Y, as.double(sapply(pancan.clean[, n], function(x, i) {x/Y.doscor[i]}, i)))
}
rownames(add.Y) <- rownames(pancan.clean)
View(add.Y)
View(add.Y[, -1])
matrix(nrow = 14)[, -1]
matrix(nrow = 14)
data.frame(matrix(nrow = 14)[, -1], vector(length = 14)
)
data.frame(matrix(nrow = 14)[, -1], vector(length = 14, mode = "integer")
)
data.frame(matrix(nrow = 14)[, -1], vector(length = 14, mode = "character"))
View(colnames(add.Y))
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(pancan.clean))[, -1])
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(pancan.clean) == Y.doscor.n[i])
if (length(n) == 0) next
add.Y <- data.frame(add.Y, as.double(sapply(pancan.clean[, n], function(x, i) x/Y.doscor[i], i)))
colnames(add.Y)[i] <- colnames(pancan.clean)[i]
}
rownames(add.Y) <- rownames(pancan.clean)
n
i
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(pancan.clean))[, -1])
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(pancan.clean) == Y.doscor.n[i])
if (length(n) == 0) next
add.Y <- data.frame(add.Y, as.double(sapply(pancan.clean[, n], function(x, i) x/Y.doscor[i], i)))
colnames(add.Y[, i]) <- colnames(pancan.clean[, i])
}
rownames(add.Y) <- rownames(pancan.clean)
x <- 1
+x
+x
-x
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(X))[, -1])
iti <- 0
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(X) == Y.doscor.n[i])
if (length(n) == 0) next
iti <- iti + 1
add.Y <- data.frame(add.Y, as.double(sapply(X[, n], function(x, i) x/Y.doscor[i], i)))
colnames(add.Y)[iti] <- colnames(X)[iti]
}
rownames(add.Y) <- rownames(X)
X <- add.Y
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(pancan.clean))[, -1])
iti <- 0
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(pancan.clean) == Y.doscor.n[i])
if (length(n) == 0) next
iti <- iti + 1
add.Y <- data.frame(add.Y, as.double(sapply(pancan.clean[, n], function(x, i) x/Y.doscor[i], i)))
colnames(add.Y)[iti] <- colnames(pancan.clean)[iti]
}
rownames(add.Y) <- rownames(pancan.clean)
View(add.Y)
(View(prism.treat[, "broad_id"]))
View(prism.treat)
View(prism.clean)
View(pancan.clean)
print(colnames(add.Y)[49])
print(colnames(pancan.clean)[49])
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(pancan.clean))[, -1])
iti <- 0
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(pancan.clean) == Y.doscor.n[i])
if (length(n) == 0) next
iti <- iti + 1
add.Y <- data.frame(add.Y, as.vector(sapply(pancan.clean[, n], function(x, i) x/Y.doscor[i], i)))
colnames(add.Y)[iti] <- colnames(pancan.clean)[iti]
}
rownames(add.Y) <- rownames(pancan.clean)
colnames(add.Y)[57]
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(pancan.clean))[, -1])
iti <- 0
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(pancan.clean) == Y.doscor.n[i])
if (length(n) == 0) next
iti <- iti + 1
add.Y <- data.frame(add.Y, sapply(pancan.clean[, n], function(x, i) x/Y.doscor[i], i))
colnames(add.Y)[iti] <- colnames(pancan.clean)[iti]
}
rownames(add.Y) <- rownames(pancan.clean)
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- as.data.frame(matrix(nrow = nrow(pancan.clean))[, -1])
iti <- 0
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(pancan.clean) == Y.doscor.n[i])
if (length(n) == 0) next
iti <- iti + 1
add.Y <- data.frame(add.Y, sapply(pancan.clean[, n], function(x, i) x/Y.doscor[i], i))
colnames(add.Y)[iti] <- colnames(pancan.clean)[n]
}
rownames(add.Y) <- rownames(pancan.clean)
colnames(add.Y)[34]
colnames(pancan.clean)[34]
colnames(pancan.clean)[37]
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- data.frame(vector(length = nrow(pancan.clean), mode = "numeric"))[, -1]
iti <- 0
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(pancan.clean) == Y.doscor.n[i])
if (length(n) == 0) next
iti <- iti + 1
add.Y <- data.frame(add.Y, as.double(sapply(pancan.clean[, n], function(x, i) x/Y.doscor[i], i)))
colnames(add.Y)[iti] <- colnames(pancan.clean)[iti]
}
rownames(add.Y) <- rownames(pancan.clean)
View(add.Y)
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- data.frame(vector(length = nrow(pancan.clean), mode = "numeric"))[, -1]
iti <- 0
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(pancan.clean) == Y.doscor.n[i])
if (length(n) == 0) next
iti <- iti + 1
add.Y <- data.frame(add.Y, sapply(pancan.clean[, n], function(x, i) x/Y.doscor[i], i))
colnames(add.Y)[iti] <- colnames(pancan.clean)[iti]
}
rownames(add.Y) <- rownames(pancan.clean)
View(add.Y)
which(colnames(add.Y) == colnames(pancan.clean)[3])
colnames(add.Y)[ncol(add.Y)]
colnames(add.Y)[ncol(add.Y)-1]
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- data.frame(vector(length = nrow(X), mode = "numeric"))[, -1]
iti <- 0
ns <- c()
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(X) == Y.doscor.n[i])
if (length(n) == 0) next
ns <- append(ns, n)
iti <- iti + 1
add.Y <- data.frame(add.Y, as.double(sapply(X[, n], function(x, i) x/Y.doscor[i], i)))
}
colnames(add.Y) <- colnames(X)[ns]
rownames(add.Y) <- rownames(X)
View(add.Y)
rm(x)
rm(X)
Y.doscor <- as.vector(prism.treat[,"dose"])
Y.doscor.n <- rownames(prism.treat)
names(Y.doscor) <- Y.doscor.n
add.Y <- data.frame(vector(length = nrow(pancan.clean), mode = "numeric"))[, -1]
iti <- 0
ns <- c()
for (i in 1:length(Y.doscor.n)) {
n <- which(colnames(pancan.clean) == Y.doscor.n[i])
if (length(n) == 0) next
ns <- append(ns, n)
iti <- iti + 1
add.Y <- data.frame(add.Y, as.double(sapply(pancan.clean[, n], function(x, i) x/Y.doscor[i], i)))
}
colnames(add.Y) <- colnames(pancan.clean)[ns]
rownames(add.Y) <- rownames(pancan.clean)
View(add.Y)
colnames(pancan.clean)[1]
colnames(pancan.clean)[ns[1]]
colnames(pancan.clean)[1:10]
colnames(pancan.clean)[ns[1:10]]
View(prism.treat)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.01", F, doscor = T, sinonco = F)
ef.dr.identifier(pancan.clean, "q.01", F, doscor = T, sinonco = F)
ef.dr.identifier(get(st.split.vars[1]), "q.01", F, doscor = T, sinonco = F)
ef.dr.identifier(get(st.split.vars[2]), "q.01", F, doscor = T, sinonco = F)
ef.dr.identifier(get(st.split.vars[3]), "q.01", F, doscor = T, sinonco = F)
ef.dr.identifier(get(st.split.vars[4]), "q.01", F, doscor = T, sinonco = F)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.01", F, doscor = "dfd", sinonco = F)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.01", F, doscor = "dfd", sinonco = F)
ef.dr.identifier(pancan.clean, "q.01", F, doscor = "dfd", sinonco = F)
unique(prism.treat[, "broad_id"])
apply(pancan.clean, 1, mean, na.rm = T)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.01", F, doscor = "dfd", sinonco = F)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.01", F, doscor = "dfd", sinonco = F, perdrug = T)
ef.dr.identifier(pancan.clean, "q.005", F, doscor = "dfd", sinonco = F, perdrug = T)
ef.dr.identifier(get(st.split.vars[1]), "q.005", F, doscor = "dfd", sinonco = F, perdrug = T)
ef.dr.identifier(get(st.split.vars[2]), "q.005", F, doscor = "dfd", sinonco = F, perdrug = T)
View(doscor)
source('~/GitHub/2021-topic-01-team-04/Scripts/Initiator.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.01", F, doscor = F, sinonco = F, perdrug = T)
View(PanCan.DucAdeexo.)
View(pancan.doscor)
View(PanCan.DucAdeexo.doscor)
View(pancan.clean)
View(prism.clean)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.01", F, doscor = F, sinonco = F, perdrug = T)
View(pancan.doscor)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.005", F, doscor = F, sinonco = F)
sapply(prism.treat[, "broad_ID"][1:10], function(x) grep(x, prism.treat[, "broad_id"]))
sapply(prism.treat[, "broad_id"][1:10], function(x) grep(x, prism.treat[, "broad_id"]))
sapply(unique(prism.treat[, "broad_id"])[1:10], function(x) grep(x, prism.treat[, "broad_id"]))
View(prism.treat)
unique(prism.treat[, "name"][sapply(unique(prism.treat[, "broad_id"])[1:10], function(x) grep(x, prism.treat[, "broad_id"]))[1, ]])
prism.treat[, "name"][sapply(unique(prism.treat[, "broad_id"])[1:10], function(x) grep(x, prism.treat[, "broad_id"]))[1, ]]
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(pancan.clean, "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[1]), "q.005", F, doscor = F, sinonco = F)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(pancan.clean, "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[1]), "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[2]), "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[3]), "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[4]), "q.005", F, doscor = F, sinonco = F
ef.dr.identifier(get(st.split.vars.doscor[4]), "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[2]), "q.01", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[3]), "q.01", F, doscor = F, sinonco = F)
ef.dr.identifier(pancan.clean, "q.001", F, doscor = F, sinonco = F)
ef.dr.identifier(prism.clean, "q.001", F, doscor = F, sinonco = F)
View(PanCan.DucAdeexo.doscor)
View(PanCan.DucAdeCarexo.doscor)
View(PanCan.DucAdeCar)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(pancan.clean, "q.001", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[1]), "q.005", F, doscor = F, sinonco = F)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(pancan.clean, "q.001", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[1]), "q.005", F, doscor = F, sinonco = F)
View(PanCan.DucAdeCarexo.doscor)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(pancan.clean, "q.001", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[1]), "q.005", F, doscor = F, sinonco = F)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(pancan.clean, "q.001", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[1]), "q.005", F, doscor = F, sinonco = F)
typeof(PanCan.DucAdeCar.doscor) <- "data.frame"
mode(PanCan.DucAdeCar.doscor)
mode(PanCan.DucAdeCar.doscor) <- "list"
mode(PanCan.DucAdeCar.doscor)
as.data.frame(PanCan.DucAdeCar.doscor)
is.data.frame(PanCan.DucAdeCar.doscor)
setAs(from = "numeric", to = "data frame")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(pancan.clean, "q.001", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[1]), "q.005", F, doscor = F, sinonco = F)
t(data.frame(PanCan.Som.doscor))
View(t(data.frame(PanCan.Som.doscor)))
data.frame(PanCan.Som.doscor)
View(data.frame(PanCan.Som.doscor))
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#ef.caller(threshold = c(-7.3, -7, -7, -8, -7.5, -7.5), greaterthan = F, addat = c("prism.clean", "pancan.clean"))
ef.dr.identifier(prism.clean, "q.001", F, doscor = F, sinonco = F)
ef.dr.identifier(pancan.clean, "q.001", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[1]), "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[2]), "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[3]), "q.005", F, doscor = F, sinonco = F)
ef.dr.identifier(get(st.split.vars.doscor[4]), "q.005", F, doscor = F, sinonco = F)
