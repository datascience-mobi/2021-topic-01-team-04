summary(topVar)
## filtering to keep genes which have a variance greater than the 75% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar > quantile(topVar, probs = 0.75, na.rm = T)]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
# Determine number of clusters
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 10000)
summary(km)
km$cluster
D = dist(t(pancan.perdrug.topVar))
s = silhouette(km$cluster,D)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
# first is for doscor, second for perdrug
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
message("ef.prism.perdrug")
print(dr.to.effect(as.vector(ef.prism.perdrug), doscor = 2))
message("ef.pancan.perdrug")
print(dr.to.effect(as.vector(ef.pancan.perdrug), doscor = 2))
for (i in 1:4) {message(paste("ef.pancan.", i, ".perdrug", sep = ""));print(dr.to.effect(as.vector(get(paste("ef.pancan.", i, ".perdrug", sep = ""))), doscor = 2))}; rm(i)
## compute variance over all rows of the data.frame (hence genes)
prism.cl.pancan <- prism.extractor(prism.cl)
pancan.perdrug.na.imp <- df.NA.to.val(pancan.perdrug, 2, "median")
topVar <- apply(pancan.perdrug.na.imp, 2, var)
summary(topVar)
## filtering to keep genes which have a variance greater than the 75% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar > quantile(topVar, probs = 0.75, na.rm = T)]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
# Determine number of clusters
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 10000)
summary(km)
km$cluster
D = dist(t(pancan.perdrug.topVar))
s = silhouette(km$cluster,D)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
for (i in 1:15) {
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 100)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
}
for (i in 1:15) {
km = kmeans(x=pancan.perdrug.topVar,
centers = i,
nstart = 100000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
}
for (i in 1:15) {
km = kmeans(x=pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
}
for (i in 1:10) {
km = kmeans(x=pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
}
for (i in 1:10) {
km = kmeans(x=pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s, ylim = 100)
}
for (i in 1:10) {
km = kmeans(x=pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s, ylim = 1)
}
for (i in 1:10) {
km = kmeans(x=pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
}
for (i in 1:10) {
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 1000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
}
for (i in 2:10) {
km = kmeans(x=pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
}
for (i in 2:15) {
km = kmeans(x=pancan.perdrug.topVar,
centers = i,
nstart = 10000000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
}
for (i in 2:15) {
km = kmeans(x=pancan.perdrug.topVar,
centers = i,
nstart = 100000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
}
for (i in 2:15) {
km = kmeans(x=pancan.perdrug.topVar,
centers = i,
nstart = 10000)
D = dist(pancan.perdrug.topVar)
s = silhouette(km$cluster,D)
plot(s)
}
heatmap(pancan.perdrug)
heatmap(df.NA.to.val(pancan.perdrug, 2, "norm"))
heatmap(pancan.perdrug.topVar)
avs
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, silhouette(km$cluster,D))
}
print(avs); print(which(avs == max(avs)))
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, silhouette(km$cluster,D)$avg.width)
}
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, silhouette(km$cluster,D)["avg.width"])
}
print(avs); print(avs(which(avs == max(avs))))
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, silhouette(km$cluster,D)["avg.width"])
}
print(avs); print(avs[which(avs == max(avs))])
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))])
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))], which(avs == max(avs)))
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)))
RColorBrewer::brewer.pal(heatmap(pancan.perdrug.topVar), name = "Set3")
heatmap(pancan.perdrug.topVar)
heatmap(pancan.perdrug.topVar); RColorBrewer::brewer.pal(4, name = "Set3")
heatmap(pancan.perdrug.topVar, ColSideColors = RColorBrewer::brewer.pal(4, name = "Set3"))
pheatmap::pheatmap(pancan.perdrug.topVar)
pheatmap::pheatmap(pancan.perdrug.topVar[, 1:33])
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
# first is for doscor, second for perdrug
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
message("ef.prism.perdrug")
print(dr.to.effect(as.vector(ef.prism.perdrug), doscor = 2))
message("ef.pancan.perdrug")
print(dr.to.effect(as.vector(ef.pancan.perdrug), doscor = 2))
for (i in 1:4) {message(paste("ef.pancan.", i, ".perdrug", sep = ""));print(dr.to.effect(as.vector(get(paste("ef.pancan.", i, ".perdrug", sep = ""))), doscor = 2))}; rm(i)
## compute variance over all rows of the data.frame (hence genes)
prism.cl.pancan <- prism.extractor(prism.cl)
pancan.perdrug.na.imp <- df.NA.to.val(pancan.perdrug, 2, "median")
topVar <- apply(pancan.perdrug.na.imp, 2, var)
summary(topVar)
## filtering to keep genes which have a variance greater than the 75% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar > quantile(topVar, probs = 0.95, na.rm = T)]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
# Determine number of clusters
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 10000)
summary(km)
km$cluster
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)))
pheatmap::pheatmap(pancan.perdrug.topVar)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
# first is for doscor, second for perdrug
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
message("ef.prism.perdrug")
print(dr.to.effect(as.vector(ef.prism.perdrug), doscor = 2))
message("ef.pancan.perdrug")
print(dr.to.effect(as.vector(ef.pancan.perdrug), doscor = 2))
for (i in 1:4) {message(paste("ef.pancan.", i, ".perdrug", sep = ""));print(dr.to.effect(as.vector(get(paste("ef.pancan.", i, ".perdrug", sep = ""))), doscor = 2))}; rm(i)
## compute variance over all rows of the data.frame (hence genes)
prism.cl.pancan <- prism.extractor(prism.cl)
pancan.perdrug.na.imp <- df.NA.to.val(pancan.perdrug, 2, "median")
topVar <- apply(pancan.perdrug.na.imp, 2, var)
summary(topVar)
## filtering to keep genes which have a variance greater than the 75% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar > quantile(topVar, probs = 0.95, na.rm = T)]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
# Determine number of clusters
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 10000)
summary(km)
km$cluster
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 100000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)))
pheatmap::pheatmap(pancan.perdrug.topVar)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
# first is for doscor, second for perdrug
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
message("ef.prism.perdrug")
print(dr.to.effect(as.vector(ef.prism.perdrug), doscor = 2))
message("ef.pancan.perdrug")
print(dr.to.effect(as.vector(ef.pancan.perdrug), doscor = 2))
for (i in 1:4) {message(paste("ef.pancan.", i, ".perdrug", sep = ""));print(dr.to.effect(as.vector(get(paste("ef.pancan.", i, ".perdrug", sep = ""))), doscor = 2))}; rm(i)
## compute variance over all rows of the data.frame (hence genes)
prism.cl.pancan <- prism.extractor(prism.cl)
pancan.perdrug.na.imp <- df.NA.to.val(pancan.perdrug, 2, "median")
topVar <- apply(pancan.perdrug.na.imp, 2, var)
summary(topVar)
## filtering to keep genes which have a variance greater than the 75% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar > quantile(topVar, probs = 0.96, na.rm = T)]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
# Determine number of clusters
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 10000)
summary(km)
km$cluster
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 100000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)))
pheatmap::pheatmap(pancan.perdrug.topVar)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
# first is for doscor, second for perdrug
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
message("ef.prism.perdrug")
print(dr.to.effect(as.vector(ef.prism.perdrug), doscor = 2))
message("ef.pancan.perdrug")
print(dr.to.effect(as.vector(ef.pancan.perdrug), doscor = 2))
for (i in 1:4) {message(paste("ef.pancan.", i, ".perdrug", sep = ""));print(dr.to.effect(as.vector(get(paste("ef.pancan.", i, ".perdrug", sep = ""))), doscor = 2))}; rm(i)
## compute variance over all rows of the data.frame (hence genes)
prism.cl.pancan <- prism.extractor(prism.cl)
pancan.perdrug.na.imp <- df.NA.to.val(pancan.perdrug, 2, "median")
topVar <- apply(pancan.perdrug.na.imp, 2, var)
summary(topVar)
## filtering to keep genes which have a variance greater than the 75% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar > quantile(topVar, probs = 0.8, na.rm = T)]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
# Determine number of clusters
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 10000)
summary(km)
km$cluster
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 100000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)))
pheatmap::pheatmap(pancan.perdrug.topVar)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
# first is for doscor, second for perdrug
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
message("ef.prism.perdrug")
print(dr.to.effect(as.vector(ef.prism.perdrug), doscor = 2))
message("ef.pancan.perdrug")
print(dr.to.effect(as.vector(ef.pancan.perdrug), doscor = 2))
for (i in 1:4) {message(paste("ef.pancan.", i, ".perdrug", sep = ""));print(dr.to.effect(as.vector(get(paste("ef.pancan.", i, ".perdrug", sep = ""))), doscor = 2))}; rm(i)
## compute variance over all rows of the data.frame (hence genes)
prism.cl.pancan <- prism.extractor(prism.cl)
pancan.perdrug.na.imp <- df.NA.to.val(pancan.perdrug, 2, "median")
topVar <- apply(pancan.perdrug.na.imp, 2, var)
summary(topVar)
## filtering to keep genes which have a variance greater than the 75% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar > quantile(topVar, probs = 0.96, na.rm = T)]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
# Determine number of clusters
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 10000)
summary(km)
km$cluster
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)) + 1)
pheatmap::pheatmap(pancan.perdrug.topVar)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
# first is for doscor, second for perdrug
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
message("ef.prism.perdrug")
print(dr.to.effect(as.vector(ef.prism.perdrug), doscor = 2))
message("ef.pancan.perdrug")
print(dr.to.effect(as.vector(ef.pancan.perdrug), doscor = 2))
for (i in 1:4) {message(paste("ef.pancan.", i, ".perdrug", sep = ""));print(dr.to.effect(as.vector(get(paste("ef.pancan.", i, ".perdrug", sep = ""))), doscor = 2))}; rm(i)
## compute variance over all rows of the data.frame (hence genes)
prism.cl.pancan <- prism.extractor(prism.cl)
pancan.perdrug.na.imp <- df.NA.to.val(pancan.perdrug, 2, "median")
topVar <- apply(pancan.perdrug.na.imp, 2, var)
summary(topVar)
## filtering to keep genes which have a variance greater than the 75% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar > quantile(topVar, probs = 0.96, na.rm = T)]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
# Determine number of clusters
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 10000)
summary(km)
km$cluster
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 1000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)) + 1)
pheatmap::pheatmap(pancan.perdrug.topVar)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
# first is for doscor, second for perdrug
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
message("ef.prism.perdrug")
print(dr.to.effect(as.vector(ef.prism.perdrug), doscor = 2))
message("ef.pancan.perdrug")
print(dr.to.effect(as.vector(ef.pancan.perdrug), doscor = 2))
for (i in 1:4) {message(paste("ef.pancan.", i, ".perdrug", sep = ""));print(dr.to.effect(as.vector(get(paste("ef.pancan.", i, ".perdrug", sep = ""))), doscor = 2))}; rm(i)
## compute variance over all rows of the data.frame (hence genes)
prism.cl.pancan <- prism.extractor(prism.cl)
pancan.perdrug.na.imp <- df.NA.to.val(pancan.perdrug, 2, "median")
topVar <- apply(pancan.perdrug.na.imp, 2, var)
summary(topVar)
## filtering to keep genes which have a variance greater than the 75% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar > quantile(topVar, probs = 0.96, na.rm = T)]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
# Determine number of clusters
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 10000)
summary(km)
km$cluster
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 10000)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)) + 1)
pheatmap::pheatmap(pancan.perdrug.topVar)
