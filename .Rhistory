.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]] <- .env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]][-rev(del)]
}
del <- c(NULL)
for (j in 1:nrow(pancan.achilles)) {
if (!{rownames(pancan.achilles)[j] %in% names(get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra))}) del <- append(del, j)
}
if(!is.null(del)) {
.env.ra[[paste("pancan.achilles.fitted.", i, sep = "")]] <- pancan.achilles[-rev(del), ]
} else .env.ra[[paste("pancan.achilles.fitted.", i, sep = "")]] <- pancan.achilles
}
env.ra.vars <- ls(pos = .env.ra); env.ra.vars
env.ra.vars.grpd <- lapply(0:3, function(i) return(env.ra.vars[{1+(i*5)}:{5+(i*5)}])); env.ra.vars.grpd
pancan.achilles.na.imp <- df.NA.to.val(.env.ra$pancan.achilles.fitted.2, 2, "median")
topVar <- apply(pancan.achilles.na.imp, 2, var)
summary(topVar)
pancan.achilles.topVar <- pancan.achilles.na.imp[, topVar > quantile(topVar, probs = 0.95, na.rm = T)]
dim(pancan.achilles.topVar)
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.2 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2)
names(r2[which(r2 == max(r2))])
summary(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar))
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
source('~/GitHub/2021-topic-01-team-04/Scripts/Initiator.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
.env.ra <- new.env(parent = .GlobalEnv)
pancan.achilles <- row.col.cleaner(prism.extractor(prism.achilles))
for (i in 1:5) {
assign(
paste("dr.ef.pancan.max.", i, sep = ""),
dr.to.effect(ef.pancan.perdrug, doscor = 2)[i],
pos = .env.ra)
assign(
paste("id.dr.ef.pancan.max.", i, sep = ""),
as.character(unique(prism.treat[which(prism.treat[, "name"]==names(get(paste("dr.ef.pancan.max.", i, sep = ""), pos = .env.ra))), "broad_id"])),
pos = .env.ra)
assign(
paste("ef.pancan.max.percl.", i, sep = ""),
pancan.perdrug[, get(paste("id.dr.ef.pancan.max.", i, sep = ""), pos = .env.ra)],
pos = .env.ra)
names(.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]]) <- rownames(pancan.perdrug)
assign(
paste("ef.pancan.max.percl.", i, sep = ""),
get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra)[!is.na(get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra))],
pos = .env.ra)
del <- c(NULL)
for (j in 1:length(get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra))) {
if (sum(grepl(names(get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra))[j], rownames(pancan.achilles)))==0) {del <- append(del, j)}
}
if(!is.null(del)) {
.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]] <- .env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]][-rev(del)]
}
del <- c(NULL)
for (j in 1:nrow(pancan.achilles)) {
if (!{rownames(pancan.achilles)[j] %in% names(get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra))}) del <- append(del, j)
}
if(!is.null(del)) {
.env.ra[[paste("pancan.achilles.fitted.", i, sep = "")]] <- pancan.achilles[-rev(del), ]
} else .env.ra[[paste("pancan.achilles.fitted.", i, sep = "")]] <- pancan.achilles
}
env.ra.vars <- ls(pos = .env.ra); env.ra.vars
env.ra.vars.grpd <- lapply(0:3, function(i) return(env.ra.vars[{1+(i*5)}:{5+(i*5)}])); env.ra.vars.grpd
pancan.achilles.na.imp <- df.NA.to.val(.env.ra$pancan.achilles.fitted.2, 2, "median")
topVar <- apply(pancan.achilles.na.imp, 2, var)
summary(topVar)
pancan.achilles.topVar <- pancan.achilles.na.imp[, topVar > quantile(topVar, probs = 0.95, na.rm = T)]
dim(pancan.achilles.topVar)
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.2 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2)
names(r2[which(r2 == max(r2))])
substitute(.env.ra)
as.character(substitute(.env.ra))
as.character(.env.ra)
environmentName(.env.ra)
environmentName(.env.ra) <- "lala"
environmentName(.GlobalEnv)
if (!exists(as.environment(pos), where = .GlobalEnv)) {
assign(as.character(substitute(pos)), new.env(parent = .GlobalEnv), pos = .GlobalEnv)
} else rm(list = ls(pos = as.environment(pos)))
if (!exists(as.environment(.env.ra), where = .GlobalEnv)) {
assign(as.character(substitute(.env.ra)), new.env(parent = .GlobalEnv), pos = .GlobalEnv)
} else rm(list = ls(pos = as.environment(.env.ra)))
!exists(as.character(substitute(pos)), where = .GlobalEnv)
exists(as.character(substitute(pos)), where = .GlobalEnv)
.env.ra
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
.env.ra <- new.env(parent = .GlobalEnv)
pancan.achilles <- row.col.cleaner(prism.extractor(prism.achilles))
for (i in 1:5) {
assign(
paste("dr.ef.pancan.max.", i, sep = ""),
dr.to.effect(ef.pancan.perdrug, doscor = 2)[i],
pos = .env.ra)
assign(
paste("id.dr.ef.pancan.max.", i, sep = ""),
as.character(unique(prism.treat[which(prism.treat[, "name"]==names(get(paste("dr.ef.pancan.max.", i, sep = ""), pos = .env.ra))), "broad_id"])),
pos = .env.ra)
assign(
paste("ef.pancan.max.percl.", i, sep = ""),
pancan.perdrug[, get(paste("id.dr.ef.pancan.max.", i, sep = ""), pos = .env.ra)],
pos = .env.ra)
names(.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]]) <- rownames(pancan.perdrug)
assign(
paste("ef.pancan.max.percl.", i, sep = ""),
get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra)[!is.na(get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra))],
pos = .env.ra)
del <- c(NULL)
for (j in 1:length(get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra))) {
if (sum(grepl(names(get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra))[j], rownames(pancan.achilles)))==0) {del <- append(del, j)}
}
if(!is.null(del)) {
.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]] <- .env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]][-rev(del)]
}
del <- c(NULL)
for (j in 1:nrow(pancan.achilles)) {
if (!{rownames(pancan.achilles)[j] %in% names(get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra))}) del <- append(del, j)
}
if(!is.null(del)) {
.env.ra[[paste("pancan.achilles.fitted.", i, sep = "")]] <- pancan.achilles[-rev(del), ]
} else .env.ra[[paste("pancan.achilles.fitted.", i, sep = "")]] <- pancan.achilles
}
env.ra.vars <- ls(pos = .env.ra); env.ra.vars
env.ra.vars.grpd <- lapply(0:3, function(i) return(env.ra.vars[{1+(i*5)}:{5+(i*5)}])); env.ra.vars.grpd
pancan.achilles.na.imp <- df.NA.to.val(.env.ra$pancan.achilles.fitted.1, 2, "median")
topVar <- apply(pancan.achilles.na.imp, 2, var)
summary(topVar)
pancan.achilles.topVar <- pancan.achilles.na.imp[, topVar > quantile(topVar, probs = 0.95, na.rm = T)]
dim(pancan.achilles.topVar)
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2)
names(r2[which(r2 == max(r2))])
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2)
names(r2[which(r2 == max(r2))]); names(r2[which(r2 == min(r2))])
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2); min(r2)
names(r2[which(r2 == max(r2))]); names(r2[which(r2 == min(r2))])
models[[i]]
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2); min(r2)
names(r2[which(r2 == max(r2))]); names(r2[which(r2 == min(r2))])
which(r2 == max(r2))
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2); min(r2)
names(r2[which(r2 == max(r2))]); names(r2[which(r2 == min(r2))])
unname(which(r2 == max(r2)))
models[[432]]
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, i])
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2); min(r2)
names(r2[which(r2 == max(r2))]); names(r2[which(r2 == min(r2))])
unname(which(r2 == max(r2)))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1)
abline(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, 432]))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1)
abline(summary(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, 432])))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1)
abline(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, 432]))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1, ylab = ef.pancan.perdrug[1], xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])))
abline(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, 432]))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1, ylab = paste("Efficacy per dosage of", ef.pancan.perdrug[1]), xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])))
abline(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, 432]))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1, ylab = paste("Efficacy per dosage of", ef.pancan.perdrug[1]), xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])), main = paste("Plot of the correlation of", names(r2[which(r2 == max(r2))]), "with", ef.pancan.perdrug[1], "at r.squared =", max(r2)))
abline(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, 432]))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1, ylab = paste("Efficacy per dosage of", ef.pancan.perdrug[1]), xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])), main = paste("Plot of the correlation of", names(r2[which(r2 == max(r2))]), "with", ef.pancan.perdrug[1], "at r.squared =", round(max(r2), digits = 4)))
abline(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, 432]))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1, ylab = paste("Efficacy per dosage of", ef.pancan.perdrug[1]), xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])), main = paste("Plot of the correlation of", names(r2[which(r2 == max(r2))]), "with", ef.pancan.perdrug[1], "at r.squared =", round(max(r2), digits = 5)))
abline(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, 432]))
pancan.achilles.na.imp <- df.NA.to.val(.env.ra$pancan.achilles.fitted.2, 2, "median")
topVar <- apply(pancan.achilles.na.imp, 2, var)
summary(topVar)
pancan.achilles.topVar <- pancan.achilles.na.imp[, topVar > quantile(topVar, probs = 0.95, na.rm = T)]
dim(pancan.achilles.topVar)
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.2 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2); min(r2)
names(r2[which(r2 == max(r2))]); names(r2[which(r2 == min(r2))])
unname(which(r2 == max(r2)))
plot(pancan.achilles.topVar[, 259], .env.ra$ef.pancan.max.percl.2, ylab = paste("Efficacy per dosage of", ef.pancan.perdrug[2]), xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])), main = paste("Plot of the correlation of", names(r2[which(r2 == max(r2))]), "with", ef.pancan.perdrug[2], "at r.squared =", round(max(r2), digits = 5)))
abline(lm(.env.ra$ef.pancan.max.percl.2 ~ pancan.achilles.topVar[, 259]))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1, ylab = paste("Efficacy per dosage of", ef.pancan.perdrug[1]), xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])), main = paste("Correlation of", names(r2[which(r2 == max(r2))]), "with", ef.pancan.perdrug[1], "at r.squared =", round(max(r2), digits = 5)))
pancan.achilles.na.imp <- df.NA.to.val(.env.ra$pancan.achilles.fitted.1, 2, "median")
topVar <- apply(pancan.achilles.na.imp, 2, var)
summary(topVar)
pancan.achilles.topVar <- pancan.achilles.na.imp[, topVar > quantile(topVar, probs = 0.95, na.rm = T)]
dim(pancan.achilles.topVar)
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2); min(r2)
names(r2[which(r2 == max(r2))]); names(r2[which(r2 == min(r2))])
unname(which(r2 == max(r2)))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1, ylab = paste("Efficacy per dosage of", ef.pancan.perdrug[1]), xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])), main = paste("Correlation of", names(r2[which(r2 == max(r2))]), "with", ef.pancan.perdrug[1], "at r.squared =", round(max(r2), digits = 5)))
abline(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, 432]))
pancan.achilles.na.imp <- df.NA.to.val(.env.ra$pancan.achilles.fitted.2, 2, "median")
topVar <- apply(pancan.achilles.na.imp, 2, var)
summary(topVar)
pancan.achilles.topVar <- pancan.achilles.na.imp[, topVar > quantile(topVar, probs = 0.95, na.rm = T)]
dim(pancan.achilles.topVar)
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.2 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2); min(r2)
names(r2[which(r2 == max(r2))]); names(r2[which(r2 == min(r2))])
unname(which(r2 == max(r2)))
plot(pancan.achilles.topVar[, 259], .env.ra$ef.pancan.max.percl.2, ylab = paste("Efficacy per dosage of", ef.pancan.perdrug[2]), xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])), main = paste("Correlation of", names(r2[which(r2 == max(r2))]), "with", ef.pancan.perdrug[2], "at r.squared =", round(max(r2), digits = 5)))
abline(lm(.env.ra$ef.pancan.max.percl.2 ~ pancan.achilles.topVar[, 259]))
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#   first is for doscor, second for perdrug
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
message("ef.prism.perdrug")
print(dr.to.effect(as.vector(ef.prism.perdrug), doscor = 2))
message("ef.pancan.perdrug")
print(dr.to.effect(as.vector(ef.pancan.perdrug), doscor = 2))
for (i in 1:4) {message(paste("ef.pancan.", i, ".perdrug", sep = ""));print(dr.to.effect(as.vector(get(paste("ef.pancan.", i, ".perdrug", sep = ""))), doscor = 2))}; rm(i)
#   compute variance over all rows of the data.frame (hence genes)
prism.cl.pancan <- prism.extractor(prism.cl)
pancan.perdrug.na.imp <- df.NA.to.val(pancan.perdrug, 2, "median")
topVar <- apply(pancan.perdrug.na.imp, 2, var)
summary(topVar)
#   filtering to keep genes which have a variance greater than the 96% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar >= sort(topVar, decreasing = T)[100]]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
#   Determine number of clusters
wss <- (nrow(mydata) - 1) * sum(apply(mydata, 2, var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 100)
summary(km)
km$cluster
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 100)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
knitr::opts_chunk$set(echo = TRUE)
source("Scripts/Initiator.R")
hist(apply(df.NA.to.val(prism.clean, 2, "median"), 2, mean), breaks=20, main="Drug Efficacy across Pancreatic Cancer Cell Lines", xlab="Mean Logfold Drug Effect on Cell Growth", ylab="Number of Drugs")
#   first is for doscor, second for perdrug
th <- "q.001, q.005"
source("./Scripts/EfDrIdentifier.R")
message("ef.prism.perdrug")
print(dr.to.effect(as.vector(ef.prism.perdrug), doscor = 2))
message("ef.pancan.perdrug")
print(dr.to.effect(as.vector(ef.pancan.perdrug), doscor = 2))
for (i in 1:4) {message(paste("ef.pancan.", i, ".perdrug", sep = ""));print(dr.to.effect(as.vector(get(paste("ef.pancan.", i, ".perdrug", sep = ""))), doscor = 2))}; rm(i)
#   compute variance over all rows of the data.frame (hence genes)
prism.cl.pancan <- prism.extractor(prism.cl)
pancan.perdrug.na.imp <- df.NA.to.val(pancan.perdrug, 2, "median")
topVar <- apply(pancan.perdrug.na.imp, 2, var)
summary(topVar)
#   filtering to keep genes which have a variance greater than the 96% percentile
pancan.perdrug.topVar <- pancan.perdrug.na.imp[, topVar >= sort(topVar, decreasing = T)[100]]
dim(pancan.perdrug.topVar)
mydata <- pancan.perdrug.topVar
#   Determine number of clusters
wss <- (nrow(mydata) - 1) * sum(apply(mydata, 2, var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
km = kmeans(x=pancan.perdrug.topVar,
centers = 2,
nstart = 100)
summary(km)
km$cluster
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 100)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster,D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)) + 1)
pheatmap::pheatmap(pancan.perdrug.topVar)
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 100)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster, D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)) + 1)
plot(silhouette(kmeans(x = pancan.perdrug.topVar, centers = 2, nstart = 100)$cluster, dist(pancan.perdrug.topVar)))
avs <- c()
for (i in 2:15) {
km <- kmeans(x = pancan.perdrug.topVar,
centers = i,
nstart = 100)
D <- dist(pancan.perdrug.topVar)
avs <- append(avs, summary(silhouette(km$cluster, D))$avg.width)
}
print(avs); print(avs[which(avs == max(avs))]); print(which(avs == max(avs)) + 1)
plot(silhouette(kmeans(x = pancan.perdrug.topVar, centers = 2, nstart = 100)$cluster, dist(pancan.perdrug.topVar)), main = "Silhouette Diagramme for Two Clusters")
nrow(.env.ra$pancan.achilles.fitted.1)
nrow(.env.ra$pancan.achilles.fitted.2)
rownames(.env.ra$pancan.achilles.fitted.1)
rownames(.env.ra$pancan.achilles.fitted.2)
pancan.perdrug[34, 34]
pancan.perdrug[32, 34]
pancan.perdrug[31, 34]
pancan.perdrug[31, 90]
pancan.perdrug[14, 90]
pancan.perdrug[14, 67]
min(pancan.perdrug[1, ])
min(pancan.perdrug[1, ], na.rm = T)
.env.ra <- new.env(parent = .GlobalEnv)
pancan.achilles <- row.col.cleaner(prism.extractor(prism.achilles))
for (i in 1:5) {
.env.ra[[paste("dr.ef.pancan.max.", i, sep = "")]] <- dr.to.effect(ef.pancan.perdrug, doscor = 2)[i]
.env.ra[[paste("id.dr.ef.pancan.max.", i, sep = "")]] <- as.character(unique(prism.treat[which(prism.treat[, "name"]==names(get(paste("dr.ef.pancan.max.", i, sep = ""), pos = .env.ra))), "broad_id"]))
.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]] <- pancan.perdrug[, get(paste("id.dr.ef.pancan.max.", i, sep = ""), pos = .env.ra)]
names(.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]]) <- rownames(pancan.perdrug)
.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]] <- get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra)[!is.na(get(paste("ef.pancan.max.percl.", i, sep = ""), pos = .env.ra))]
del <- c(NULL)
for (j in 1:length(.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]])) {
if (sum(grepl(names(.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]])[j], rownames(pancan.achilles)))==0) {del <- append(del, j)}
}
if(!is.null(del)) {
.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]] <- .env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]][-rev(del)]
}
del <- c(NULL)
for (j in 1:nrow(pancan.achilles)) {
if (!{rownames(pancan.achilles)[j] %in% names(.env.ra[[paste("ef.pancan.max.percl.", i, sep = "")]])}) del <- append(del, j)
}
if(!is.null(del)) {
.env.ra[[paste("pancan.achilles.fitted.", i, sep = "")]] <- pancan.achilles[-rev(del), ]
} else .env.ra[[paste("pancan.achilles.fitted.", i, sep = "")]] <- pancan.achilles
}
env.ra.vars <- ls(pos = .env.ra); env.ra.vars
env.ra.vars.grpd <- lapply(0:3, function(i) return(env.ra.vars[{1+(i*5)}:{5+(i*5)}])); env.ra.vars.grpd
pancan.achilles.na.imp <- df.NA.to.val(.env.ra$pancan.achilles.fitted.1, 2, "median")
topVar <- apply(pancan.achilles.na.imp, 2, var)
summary(topVar)
pancan.achilles.topVar <- pancan.achilles.na.imp[, topVar > quantile(topVar, probs = 0.95, na.rm = T)]
dim(pancan.achilles.topVar)
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2); min(r2)
names(r2[which(r2 == max(r2))]); names(r2[which(r2 == min(r2))])
unname(which(r2 == max(r2)))
plot(pancan.achilles.topVar[, 432], .env.ra$ef.pancan.max.percl.1, ylab = paste("Efficacy per dosage of", ef.pancan.perdrug[1]), xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])), main = paste("Correlation of", names(r2[which(r2 == max(r2))]), "with", ef.pancan.perdrug[1], "at r.squared =", round(max(r2), digits = 5)))
abline(lm(.env.ra$ef.pancan.max.percl.1 ~ pancan.achilles.topVar[, 432]))
pancan.achilles.na.imp <- df.NA.to.val(.env.ra$pancan.achilles.fitted.2, 2, "median")
topVar <- apply(pancan.achilles.na.imp, 2, var)
summary(topVar)
pancan.achilles.topVar <- pancan.achilles.na.imp[, topVar > quantile(topVar, probs = 0.95, na.rm = T)]
dim(pancan.achilles.topVar)
models <- list()
for (i in 1:(ncol(pancan.achilles.topVar))) {
models[[i]] <- summary(lm(.env.ra$ef.pancan.max.percl.2 ~ pancan.achilles.topVar[, i]))
}
length(models)
r2 <- c()
for (i in 1:length(models)) {
r2 <- append(r2, unlist(models[[i]]$r.squared))
}
names(r2) <- colnames(pancan.achilles.topVar)
length(r2)
max(r2); min(r2)
names(r2[which(r2 == max(r2))]); names(r2[which(r2 == min(r2))])
unname(which(r2 == max(r2)))
plot(pancan.achilles.topVar[, 259], .env.ra$ef.pancan.max.percl.2, ylab = paste("Efficacy per dosage of", ef.pancan.perdrug[2]), xlab = paste("Achilles value of", names(r2[which(r2 == max(r2))])), main = paste("Correlation of", names(r2[which(r2 == max(r2))]), "with", ef.pancan.perdrug[2], "at r.squared =", round(max(r2), digits = 5)))
abline(lm(.env.ra$ef.pancan.max.percl.2 ~ pancan.achilles.topVar[, 259]))
